# Bash Terraform completion
# Adapted from cornfeedhobo's Gist at https://gist.github.com/cornfeedhobo/8bc08747ec3add1fc5adb2edb7cd68d3
#
# Features of this update:
# - Use built-in bash routines for text processing, instead of external tools (awk, sed, grep, ...).
# - fixes the retrieval of options from the Terraform executble.
# - Optional _init_terraform_completion function, which can enable command-completion for multiple Terraform executables.
#
# To use this tool, add the contents to your ${HOME}/.bashrc file.
#

#-- Get options listing from Terraform command.
_terraform_completion_get_opts () {
  local TF_OPT="${1}"

  local IFS=$'\n'
  #- "terraform --help"
  if [[ "${TF_OPT}" == "" ]]; then
    for O in $(terraform -help); do
      if [[ "${O}" =~ ^\ +([^\ ]+) ]]; then
        echo "${BASH_REMATCH[1]}"
      fi
    done
  #- "terraform --help XXXX"
  else
    for O in $(terraform -help ${TF_OPT}); do
      if [[ "${O}" =~ ^\ +(-[^\ =]+=?) ]]; then
        echo "${BASH_REMATCH[1]}"
      fi
    done
  fi
}

#-- This function is passed to 'complete' for handling completion.
_terraform_completion () {
  local cur prev words cword opts
  _get_comp_words_by_ref -n : cur prev words cword
  COMPREPLY=()
  opts=""
  if [[ ${cur} == -* ]] ; then
    compopt -o nospace
  fi

  if [[ ${cword} -eq 1 ]] ; then
    if [[ ${cur} == -* ]] ; then
      opts="--help --version"
    else
      opts="$(_terraform_completion_get_opts)"
    fi
  fi

  if [[ ${cword} -gt 1 ]] ; then
    if [[ ${cword} -eq 2 && ${prev} =~ \-\-?help ]]; then
      opts="$(_terraform_completion_get_opts)"
    else
      opts="$(_terraform_completion_get_opts ${prev})"
    fi
  fi

  COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
  return 0
}

complete -F _terraform_completion terraform
complete -F _terraform_completion tf
