#!/usr/bin/env bash

set -eou pipefail
shopt -s inherit_errexit

ME="$(basename "$0")"
ROOT="$HOME/dotfiles/"
PUBLIC="$ROOT/public"
PRIVATE="$ROOT/private"
TARGET="$HOME"

main() {
  [[ "$#" -eq 0 ]] && usage "Need at least one command"

  command=$1; shift

  case $command in
    "private")
      private "$@"
      ;;
    "public")
      public "$@"
      ;;
    "ignore")
      ignore "$@"
      ;;
    "install")
      install
      ;;
    "pull-dir")
      pull-dir "$@"
      ;;
    "pull")
      pull
      ;;
    *)
      usage "don't recognize $command"
  esac
}

function usage {
  echo "Error: $1"
  echo
  echo "Usage:"
  echo "  $ME public FILE   - Track a file publicly"
  echo "  $ME private FILE  - Track a file privately"
  echo "  $ME ignore FILE   - Ignore a file path (use full path with \$HOME as root)"
  echo "  $ME pull          - Update to latest version from github."
  echo "  $ME install       - Install dotfiles.  Idempotent."
  exit 3
}

function private {
  [[ "$HOME" == "$PWD" ]] || usage "This must be run from $HOME"

  file=$1
  dest="$PRIVATE/$file"
  mkdir -p "$(dirname "$dest")"
  echo "Moving $file to private repo"
  mv "$file" "$dest"
  install
}

function public {
  if [[ "$HOME" != "$PWD" ]]; then
    usage "This must be run from $HOME"
  fi
  file=$1
  dest="$PUBLIC/$file"
  mkdir -p "$(dirname "$dest")"
  echo "Moving $file to public repo"
  mv "$file" "$dest"
  install
}

function ignore {
  file=$1
  echo "Adding /$file to .gitignore"
  echo "/$file" >> "$PUBLIC/.gitignore"
}

function install {
  if ! command -v stow > /dev/null 2>&1; then
    usage "Can't find GNU stow."
  fi
  stow --dir="$ROOT" --target="$TARGET" --restow public private
}

function pull-dir {
  (
    cd "$1"
    touch .force-stash
    git stash push -u --quiet -m "In dotfiles pull"
    git fetch --all --quiet
    git rebase FETCH_HEAD --quiet
    git stash pop --quiet | grep -v "Already up to date" || true
    rm .force-stash
    git status --short --untracked-files
  )
}

function pull {
  pull-dir "$PUBLIC"
  pull-dir "$PRIVATE"
  install
  [[ -x "$PUBLIC/post-pull.sh" ]] && "$PUBLIC/post-pull.sh"
  [[ -x "$PRIVATE/post-pull.sh" ]] && "$PRIVATE/post-pull.sh"
}

[[ -v DEBUG ]] && set -x

main "$@"
