#!/usr/bin/env bash

set -eou pipefail

ME="$(basename "$0")"
ROOT="$HOME/.dotfiles/"
PUBLIC="$ROOT/public"
PRIVATE="$ROOT/private"
TARGET="$HOME"

function usage {
  echo "Error: $1"
  echo
  echo "Usage:"
  echo "  $ME private FILE      # Make a file private"
  echo "  $ME ignore FILE       # Ignore a file path (use full path)"
  echo "  $ME install           # Install dotfiles.  Idempotent."
  exit 3
}

if [[ "$#" -eq 0 ]]; then
  usage "Need at least one command"
fi

command=$1
shift

function private {
  file=$1
  public_source="$PUBLIC/$file"
  private_dest="$PRIVATE/$file"
  mkdir -p "$(dirname "$private_dest")"
  echo "Moving $file to private repo"
  mv "$public_source" "$private_dest"
}

function ignore {
  file=$1
  echo "Adding /$file to .gitignore"
  echo "/$file" >> $PUBLIC/.gitignore
}

function install {
  if ! which stow > /dev/null 2>&1; then
    usage "can't find GNU stow"
  fi
  stow -d "$ROOT" -t "$TARGET" -R public -R private
}

function pull {
  (
    cd $PUBLIC
    touch .force-stash
    git stash -u
    git pull --rebase
    git stash apply
    rm .force-stash
  )
  (
    cd $PRIVATE
    touch .force-stash
    git stash -u
    git pull --rebase
    git stash apply
    rm .force-stash
  )
  install
}

case $command in
  "private")
    private "$@"
    ;;
  "ignore")
    ignore "$@"
    ;;
  "install")
    install
    ;;
  "pull")
    pull
    ;;
  *)
    usage "don't recognize $command"
esac
