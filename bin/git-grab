#!/usr/bin/env bash

set -euo pipefail
shopt -s inherit_errexit

SRC_BASE="$HOME/src/github.com"

main() {
  [[ $# == 1 ]] || usage "Missing REPO"

  if is_url "$1"; then
    tuple=$(tuple_from_url "$1")
    org=$(org_from_tuple "$tuple")
    repo=$(repo_from_tuple "$tuple")
  elif is_tuple "$1"; then
    tuple=$1
    org=$(org_from_tuple "$tuple")
    repo=$(repo_from_tuple "$tuple")
  else
    realpwd=$(pwd -P)
    [[ "$(dirname "$realpwd")" == "$SRC_BASE" ]] || \
      usage "Provided repo, but not in an org directory under $SRC_BASE"

    org=$(basename "$realpwd")
    repo=$1
    tuple="$org/$repo"
  fi

  if [[ -d "$HOME/src/github.com/$tuple" ]]; then
    echo "$HOME/src/github.com/$tuple is already cloned."
    exit
  fi

  mkdir -p "$SRC_BASE/$org"
  cd "$SRC_BASE/$org"
  git clone "https://github.com/${tuple}.git"
}

is_url() {
  [[ "$1" =~ ^https?: ]] || [[ "$1" =~ ^git: ]]
}

is_tuple() {
  [[ "$1" =~ [[:alnum:]]+/[[:alnum:]]+ ]]
}

tuple_from_url() {
  rev <<< "$1" | cut -d / -f 1,2 | rev
}

org_from_tuple() {
  cut -f 1 -d / <<< "$1"
}

repo_from_tuple() {
  cut -f 2 -d / <<< "$1"
}

usage() {
  [[ $# -gt 0 ]] && echo "ERROR: $*"
  cat <<EOF
  USAGE: git grab [REPO_PAIR|REPO_URL]

  Clones the github repo into ~/src/github.com/org/repo
  Where REPO is either a full URL (without the .git), an ORG/REPO tuple, or
  just REPO. If just REPO, you must be in the ~/src/github.com/org directory.

  Example: git grab superorbital/foo
           git grab https://github.com/superorbital/foo
           cd ~/src/github.com/superorbital; git grab foo

EOF
  exit 1
}

main "$@"

