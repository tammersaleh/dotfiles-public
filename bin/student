#!/usr/bin/env bash

set -eou pipefail

function usage {
  local message=$1
  echo "ERROR: $message"
  echo
  echo "USAGE: $(basename "$0") [create|delete|recreate|as|shell] STUDENT_NUMBER_OR_RANGE"
  echo
  echo "Creates the student user, and populates their home directory with a copy of the"
  echo "workshop repository.  Must be run from within a checked out workshop repository."
  echo
  echo "STUDENT_NUMBER_OR_RANGE can be a number or a range like 0-19"
  echo "If given a range, all commands are run in parallel."
  echo "The 'shell' command does not take a range."
  echo
  echo "Examples:"
  echo "  $(basename "$0") create 0-19"
  echo "  $(basename "$0") as 0-19 whoami"
  echo "  $(basename "$0") shell 3"
  echo
  exit 1
}

function username {
  local n=$1
  echo "$STUDENT_PREFIX$n"
}

function create {
  local number=$1
  local username="$(username "$number")"
  local password="$username"

  [[ -d "/home/$username" ]] && usage "$username already exists.  Maybe you meant to recreate?"

  sudo useradd -c "Student $number" \
               -k "$STUDENT_HOME" \
               -G students \
               -m \
               -s /home/linuxbrew/.linuxbrew/bin/bash "$username"
  echo "${username}:${password}" | sudo chpasswd

  # shellcheck disable=SC2046
  sudo rm -rf $(sudo find "/home/$username" -iname ".git*")

  $STUDENT_POST_CREATE_SCRIPT "$number" "$username"

  echo "Created student $username with password $password"
}

function delete {
  local number=$1
  local username="$(username "$number")"
  sudo userdel -fr "$username" > /dev/null 2>&1 || true
  echo "Deleted student $username"
}

function recreate {
  local number=$1; shift
  delete "$number" "$*"
  create "$number" "$*"
}

function as {
  local number=$1
  shift
  local username="$(username "$number")"
  sudo -iu "$username" bash -c "$*"
}

function shell {
  local number=$1
  shift
  local username="$(username "$number")"
  sudo -iu "$username"
}

function pingtest {
  sleep $(( RANDOM % 3 ))
  echo "Received" "$*"
}

_find_base () {
  path=$(pwd)
  while [[ "$path" != "" && ! -e "$path/.student.conf" ]]; do
    path=${path%/*}
  done
  echo "$path/"
}

base="$(_find_base)"

[[ $# -lt 2  ]]              && usage "Expected more arguments"
[[ $HOSTNAME != "bastion" ]] && usage "Refusing to run on host other than bastion."
[[ -z $base ]]               && usage "Cannot find a .student.conf file."

cd "$base"

# shellcheck disable=SC1091
source ".student.conf"
STUDENT_POST_CREATE_SCRIPT=${STUDENT_POST_CREATE_SCRIPT:-true}

cmd=$1
number_or_range=$2
shift 2

if [[ $number_or_range =~ ^[0-9]+$ ]]; then
  range=("$number_or_range" "$number_or_range")
elif [[ $number_or_range =~ ^[0-9]+-[0-9]+$ ]]; then
  IFS=- read -ra range <<< "$number_or_range"
else
  usage "Expected a number or range."
fi

# shellcheck disable=SC2068
for number in $(seq ${range[@]}); do
  if [[ "$cmd" == "shell" ]]; then
    shell "$number"
  else
    "$cmd" "$number" "$*" &
  fi
done

wait
